@model OTServer.UI.MVC.Models.DTOPlayerSearch
@using System.Globalization;


<div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLongTitle">Detalhes</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Name)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Name)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Level)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Level)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Resets)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Resets)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Voc)
                </dt>
                <dd class="col-sm-10">
                    @{
                        string result = "";
                        var voc = Model.Voc;
                        switch (voc)
                        {
                            case "1":
                                result = "Sorcerer";
                                break;
                            case "2":
                                result = "Druid";
                                break;
                            case "3":
                                result = "Archer";
                                break;
                            case "4":
                                result = "Knight";
                                break;
                            case "5":
                                result = "Master Sorcerer";
                                break;
                            case "6":
                                result = "Elder Druid";
                                break;
                            case "7":
                                result = "Royal Archer";
                                break;
                            case "8":
                                result = "Elite Knight";
                                break;
                            case "9":
                                result = "Wizard";
                                break;
                            case "10":
                                result = "Cleric";
                                break;
                            case "11":
                                result = "Ranger";
                                break;
                            case "12":
                                result = "Slayer";
                                break;
                            case "13":
                                result = "Dark Wizard";
                                break;
                            case "14":
                                result = "Elemental Cleric";
                                break;
                            case "15":
                                result = "Elven Ranger";
                                break;
                            case "16":
                                result = "Dragon Slayer";
                                break;
                        }
                    }
                    @result
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Exp)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Exp)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Health)
                </dt>
                <dd class="col-sm-10">
                    @{ var totalHealth = (Convert.ToUInt32((Model.Health.Max / 65500) * 100)).ToString() + "%";}
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-danger" role="progressbar" aria-valuenow="75" aria-valuemin="10" aria-valuemax="100" style="width:@totalHealth"></div>
                    </div>
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Mana)
                </dt>
                <dd class="col-sm-10">
                    @{ var totalMana = (Convert.ToUInt32((Model.Mana.Max / 65500) * 100)).ToString() + "%";}
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="75" aria-valuemin="10" aria-valuemax="100" style="width:@totalMana"></div>
                    </div>
                </dd>
            </dl>
            <hr />
            <h5 class="tab-pane" id="exampleModalLongTitle">Ultimas Mortes: </h5>
            <table class="table table-active">
                <tbody>
                    @{
                        int count = 0;

                        var listaMortes = Model.Deaths.Death.OrderByDescending(x => x.Time).Take(5).ToList();
                        TextInfo ti = CultureInfo.CurrentCulture.TextInfo;
                        foreach (var item in listaMortes)
                        {
                            <tr class="col-12">
                                <td>
                                    Morreu no Level @item.Level por @item.Name em @{string tempo = new DateTime(1970, 1, 1, 0, 0, 0, 0).AddSeconds(item.Time).ToString("d MMM yyyy"); tempo = ti.ToTitleCase(tempo);}@tempo.Replace(" ", " de ")
                                </td>
                            </tr>
                            count++;
                        }
                    }
                </tbody>
            </table>

        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>

